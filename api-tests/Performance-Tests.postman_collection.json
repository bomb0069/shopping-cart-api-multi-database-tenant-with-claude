{
	"info": {
		"name": "Performance Tests - Multi-Tenant Shopping Cart",
		"description": "Performance and load testing collection for the multi-tenant shopping cart platform.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"version": "1.0.0"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "{{base_url}}",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Product Performance Tests",
			"item": [
				{
					"name": "Get All Products (Performance)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Tenant-ID",
								"value": "tenant1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": ["{{base_url}}"],
							"path": ["api", "products"]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response time is acceptable', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains products', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('content');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Product Search (Performance)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Tenant-ID",
								"value": "tenant1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/search?q=product",
							"host": ["{{base_url}}"],
							"path": ["api", "products", "search"],
							"query": [
								{
									"key": "q",
									"value": "product"
								}
							]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Search response time is acceptable', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Search returns results', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Cart Performance Tests",
			"item": [
				{
					"name": "Get Cart (Performance)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Tenant-ID",
								"value": "tenant1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/cart",
							"host": ["{{base_url}}"],
							"path": ["api", "cart"]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cart response time is fast', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Cart structure is valid', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('items');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Health Check (Performance)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actuator/health",
					"host": ["{{base_url}}"],
					"path": ["actuator", "health"]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Health check is very fast', function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test('Application is healthy', function () {",
							"    pm.response.to.have.status(200);",
							"    const response = pm.response.json();",
							"    pm.expect(response.status).to.eql('UP');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		}
	]
}